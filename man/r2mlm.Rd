% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r2mlm.R
\name{r2mlm}
\alias{r2mlm}
\title{Compute R-squared values for multilevel models, automatically inputting
parameter estimates.}
\usage{
r2mlm(model)
}
\arguments{
\item{model}{A model generated using \code{\link[lme4]{lmer}} or
\code{\link[nlme]{nlme}}.}
}
\value{
If the input is a valid model, then the output will be a list and
  associated graphical representation of R-squared decompositions. If the
  model is not valid, it will return an error prompting the user to input a
  valid model.
}
\description{
\code{r2mlm} reads in a multilevel model (MLM) object generated using
\code{\link[lme4]{lmer}} or \code{\link[nlme]{nlme}}, and outputs all
relevant R-squared measures from the Rights and Sterba (2019) framework of
multilevel model R-squared measures, which can be visualized together as a
set using the outputted barchart decompositions of outcome variance. That is,
when predictors are cluster-mean-centered, all R-squared measures from Rights
& Sterba (2019) Table 1 and decompositions from Rights & Sterba (2019) Figure
1 are outputted. When predictors are not cluster-mean-centered, the total
R-squared measures from Rights & Sterba (2019) Table 5, as well as barchart
decompositions are outputted. Any number of level-1 and/or level-2 predictors
is supported. Any of the level-1 predictors can have random slopes.
}
\details{
\code{r2mlm} first determines whether a given model was generated using
\code{\link[lme4]{lmer}} or \code{\link[nlme]{nlme}}, then passes the model
to helper functions that pull the raw data and parameter estimates from the
model, and pass that information to \code{\link{r2mlm_manual}}.
}
\examples{
# Using lme4 for your model

# The "bobyqa" optimizer is required for this particular model to converge

model_lme4 <- lmer(satisfaction ~ 1 + salary_c + control_c + salary_m + control_m +
s_t_ratio + (1 + salary_c + control_c| schoolID), data = teachsat, REML =
TRUE, control = lmerControl(optimizer = "bobyqa"))

r2mlm(model_lme4)

# Using nlme for your model

model_nlme <- lme(satisfaction ~ 1 + salary_c + control_c + salary_m +
                  control_m + s_t_ratio,
                  random = ~ 1 + salary_c + control_c | schoolID,
                  data = teachsat,
                  method = "REML",
                  control = (msMaxIter = 100))

r2mlm(model_nlme)

}
\seealso{
\href{https://doi.org/10.1037/met0000184}{Rights, J. D., & Sterba,
  S. K. (2019). Quantifying explained variance in multilevel models: An
  integrative framework for defining R-squared measures. Psychological
  Methods, 24(3), 309â€“338.}

Other r2mlm single model functions: 
\code{\link{r2mlm_manual}()}
}
\concept{r2mlm single model functions}
